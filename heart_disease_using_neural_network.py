# -*- coding: utf-8 -*-
"""heart disease using neural network.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CrYGCWWKjfHDfSyNh5x28vQ1gKUfufCh
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import sklearn.datasets

df=pd.read_csv('/content/heart.csv')
df

df.head(2)

df.tail(2)

df.shape

df.info()

df.describe()

a=df['age']
plt.plot(a)

b=df['exang']
c=df['target']
plt.scatter(b,c)

d=df['ca']
plt.bar(d,width=100,height=100)

e=df['fbs']
plt.hist(e)

r=df['sex']
plt.pie(r)

df.isnull().sum()

x=df.drop('target',axis=1)
x

y=df['target']
y

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.20,random_state=0)

x_train.shape

x_test.shape

from sklearn.preprocessing import StandardScaler

std=StandardScaler()

sd=std.fit_transform(x_train)

sd

import tensorflow as tf
from tensorflow import keras

model = keras.Sequential([
     keras.layers.Flatten(input_shape=(13,)),
    keras.layers.Dense(20, activation='relu'),
    keras.layers.Dense(2, activation= 'sigmoid')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

history = model.fit(x,y,validation_split=0.1,epochs=100)

plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])
plt.title('model accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['training data','validation data'], loc = 'lower right')

plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])

plt.title('model_loss')
plt.ylabel('loss')
plt.xlabel('val_loss')

plt.legend(['training data','validation data'], loc = 'upper right')

y_pred = model.predict(x_test)

y_pred1= np.argmax(y_pred, axis=1)

from sklearn.metrics import accuracy_score

accuracy_score(y_pred1,y_test)